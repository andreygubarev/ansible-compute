---
- name: Assert configuration
  ansible.builtin.import_tasks: 000-assertions.yml

- name: Prerequisite
  ansible.builtin.import_tasks: 010-prerequisite.yml

- name: Download
  ansible.builtin.import_tasks: 020-download.yml

- name: Set k3s cluster seed
  ansible.builtin.set_fact:
    k3s_cluster_seed: "{{ hostvars[groups['kubernetes_controlplane'][0]]['ansible_hostname'] }}"

- name: Register k3s cluster seed status
  ansible.builtin.stat:
    path: /var/lib/rancher/k3s/server/node-token
  when: ansible_hostname == k3s_cluster_seed
  register: k3s_cluster_seed_running

- name: Set k3s cluster seed status
  ansible.builtin.set_fact:
    k3s_cluster_seed_running: "{{ k3s_cluster_seed_running.stat.exists }}"

- name: Create k3s cluster config
  ansible.builtin.template:
    src: config.yaml.j2
    dest: /etc/rancher/k3s/config.yaml
    owner: root
    group: root
    mode: 0644

- name: Create systemd service
  ansible.builtin.template:
    src: k3s.service.j2
    dest: "/etc/systemd/system/{{ k3s_service_name }}.service"
    owner: root
    group: root
    mode: 0644

- name: Ensure service is started and enabled
  ansible.builtin.systemd:
    daemon_reload: true
    name: "{{ k3s_service_name }}"
    state: started
    enabled: "{{ k3s_service_enabled }}"

- name: Wait for node-token
  ansible.builtin.wait_for:
    path: /var/lib/rancher/k3s/server/node-token

- name: Ensure k3s cluster seed config
  ansible.builtin.template:
    src: config.yaml.j2
    dest: /etc/rancher/k3s/config.yaml
    owner: root
    group: root
    mode: 0644
